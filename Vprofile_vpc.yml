---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: import vpc variable
      include_vars: vars/vpc_setup

    - name: create vprofile vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        tenancy: default
        dns_support: yes
        dns_hostnames: yes
        state: "{{state}}"
      register: vpc_out

    - name: creating public subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{pubsub1Cidr}}"
        map_public: yes
        az: "{{zone1}}"
        tags:
          Name: pubsub1
      register: pubsub1_out

    - name: creating public subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{pubsub2Cidr}}"
        map_public: yes
        az: "{{zone2}}"
        tags:
          Name: pubsub2
      register: pubsub2_out

    - name: creating public subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{pubsub3Cidr}}"
        map_public: yes
        az: "{{zone3}}"
        tags:
          Name: pubsub3
      register: pubsub3_out

    - name: creating private subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{prisub1Cidr}}"
        map_public: no
        az: "{{zone1}}"
        tags:
          Name: prisub1
      register: prisub1_out

    - name: creating private subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{prisub2Cidr}}"
        map_public: no
        az: "{{zone2}}"
        tags:
          Name: prisub2
      register: prisub2_out

    - name: creating private subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        cidr: "{{prisub3Cidr}}"
        map_public: no
        az: "{{zone3}}"
        tags:
          Name: prisub3
      register: prisub3_out

    - name: creating internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: vprofile-vpc-IGW
        state: "{{state}}"
      register: igw_out

    - name: creating public RT
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: publicRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

    - name: creating NAT-GW
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        region: "{{region}}"
        subnet_id: "{{pubsub1_out.subnet.id}}"
        wait: yes
        wait_timeout: 300
        if_exist_do_not_create: yes
      register: nat_out

    - name: creating private RT
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: privateRT
        subnets:
          - "{{prisub1_out.subnet.id}}"
          - "{{prisub2_out.subnet.id}}"
          - "{{prisub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{nat_out.nat_gateway_id}}"
      register: priRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpc_out.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - prisub1_out.subnet.id
        - prisub2_out.subnet.id
        - prisub3_out.subnet.id
        - igw_out.gateway_id
        - nat_out.nat_gateway_id
        - pubRT_out.route_table.id
        - priRT_out.route_table.id

    - set_fact:
        vpcid: "{{vpc_out.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        prisub1id: "{{prisub1_out.subnet.id}}"
        prisub2id: "{{prisub2_out.subnet.id}}"
        prisub3id: "{{prisub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        NATgwid: "{{nat_out.nat_gateway_id}}"
        pubRTid: "{{pubRT_out.route_table.id}}"
        priRTid: "{{priRT_out.route_table.id}}"
        cacheable: yes

    - name: create variable file for vpc output
      copy:
        content: "vpcid: {{vpc_out.vpc.id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprisub1id: {{prisub1_out.subnet.id}}\nprisub2id: {{prisub2_out.subnet.id}}\nprisub3id: {{prisub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\nNATgwid: {{nat_out.nat_gateway_id}}\npubRTid: {{pubRT_out.route_table.id}}\npriRTid: {{priRT_out.route_table.id}}"
        dest: vars/output_vars









